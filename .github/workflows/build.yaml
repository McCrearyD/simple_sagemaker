name: Build, test and deploy

on: 
  push:
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    #if: github.event_name != 'push' || (!startsWith(github.ref, 'refs/heads/master'))
    
    strategy:
      max-parallel: 10
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8]
    env:
      LCOW_SUPPORTED: 1
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
      # Cache pip packages
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ matrix.os }}-pip-${{ hashFiles('**/setup.cfg') }}
        restore-keys: |
          ${{ matrix.os }}-pip-

    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint
      run: |
        tox -e lint
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Prepare windows environment
      if : matrix.os == 'windows-latest'
      run: |
        restart-service *docker*
        dir $Env:ProgramFiles\Docker -s
        &$Env:ProgramFiles\Docker\docker.exe --help
      # &$Env:ProgramFiles\Docker\Docker\DockerCli.exe -SwitchLinuxEngine
    - name: Smoke tests
      run: |
        tox -e single_proc -- --capture=no --log-cli-level=INFO tests/smoke/
    - name: System tests & check coverage
      if: matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags') ||  github.base_ref  == 'master')
      run: |
        tox -e py -- --capture=no --log-cli-level=INFO tests/system/
        tox -e report
    - name: Upload coverage report
      if: matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags') ||  github.base_ref  == 'master')
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: htmlcov
    - name: Upload examples output
      if: (!cancelled()) && matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags') ||  github.base_ref  == 'master')
      uses: actions/upload-artifact@v2
      with:
        name: examples_output
        path: |
          .tox/py/tmp/*/*/*/output/
          !.tox/py/tmp/*/*current/*/output/
    - name: Build the package
      if: matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags') ||  github.base_ref  == 'master')
      run: |
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
    - name: Upload dist files
      if: matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest' && (startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/tags') ||  github.base_ref  == 'master')
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  publish:

    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/master')

    steps:
    - name: Download dist package
      uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Publish
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
