[tox]
envlist = py37, py36, py38

[testenv] # the default env - coverage + parallalism
whitelist_externals = 
    /bin/echo
    /bin/ls
deps = 
    pytest-xdist
    coverage
    pytest-cov
    sagemaker[local]
passenv = 
    AWS_DEFAULT_REGION
    AWS_REGION
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    AWS_SESSION_TOKEN

commands =
    pytest --cov=simple_sagemaker --cov-append --cov-report=term-missing -n 4 --basetemp="{envtmpdir}" {posargs} 

[testenv:single_proc] # no coverage nor parallelism
deps = 
    sagemaker[local]
    pytest
commands =
    pytest --basetemp="{envtmpdir}" {posargs}

[testenv:ssm] # run ssm cli
deps = 
    pyyaml
    sagemaker[local]

commands =
    ssm {posargs}

[testenv:bash] # run ssm cli
deps = 
whitelist_externals = 
    /usr/bin/bash
    /bin/bash
commands =
    bash {posargs}


[testenv:no-coverage] # no coverage
commands = 
    pytest -n 4 --basetemp="{envtmpdir}" {posargs}
deps =
    pytest-xdist

[testenv:report] # generate a coverage report
skip_install = true
deps = coverage
commands =
    coverage html -i --include="*simple_sagemaker*" --omit="*worker_toolkit*"
    coverage report --include="*simple_sagemaker*" --omit="*worker_toolkit*" --fail-under=84
    coverage report --help

[testenv:clean] # clean up coverage data
skip_install = true
deps = coverage
commands = coverage erase

[tool:pytest]
testpaths = tests
    
### Formatting & linting 
[flake8]
max-line-length = 127
extend-ignore = E203

[testenv:lint]
skip_install = true
setenv =
deps =
    flake8
    black
    isort
commands =
    flake8 ./src ./tests ./examples --count --statistics
    isort --check-only ./src ./tests ./examples
    black --check ./src ./tests ./examples

[testenv:cf] # Code Format
skip_install = true
deps = 
    black
    isort
commands = 
    isort ./src ./tests ./examples
    black ./src ./tests ./examples

[testenv:publish] # build & publish the code
skip_install = true
basepython = python3.7
setenv =
deps =
    setuptools 
    wheel 
    twine
commands =
    python setup.py sdist bdist_wheel
    twine upload dist/*

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.7
changedir = docs
deps = 
    sphinx
    sphinx-rtd-theme
whitelist_externals = 
    /usr/bin/make
commands = 
    sphinx-apidoc -f -o ./source ../src/simple_sagemaker ../src/simple_sagemaker/sm_task.py ../src/simple_sagemaker/s3_sync.py ../src/simple_sagemaker/iam_utils.py ../src/simple_sagemaker/ecr_sync.py ../src/simple_sagemaker/cli.py
    make html


# Run a single test, e.g. for debugging
# tox -e single_proc -- --capture=no --log-cli-level=INFO -k single_file

# Run an ssm command line
# tox -e ssm -- run -p simple-sagemaker-example-cli -t task1 -e ./examples/cli_simple/worker.py --cs -o ./output --use_spot_instances 0

# Ececute a shell command
# tox -e bash --  ./examples/cli_simple/run.sh ./output

# Ececute a shell job
# tox -e ssm -- shell -p shell-cli -t shell-cli-task --cmd_line "ls -la" -o ./output --dir_files=./src/simple_sagemaker
# tox -e ssm -- shell -p shell-cli -t shell-cli-task --cmd_line "ls -la" -o ./output --df "RUN pip3 install pandas==0.25.3 scikit-learn==0.21.3" --repo_name "tt_repo" --aws_repo_name "tt_repo"